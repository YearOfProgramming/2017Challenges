extern crate challenge_2;
use challenge_2::find_lonely;

#[test]
fn test_find_lonely_from_readme() {

    let test_one = vec!(2,3,4,2,3,5,4,6,4,6,9,10,9,8,7,8,10,7);
    assert_eq!(find_lonely(test_one), 5);
}

#[test]
fn test_find_lonely_massive_last() {

    let test_two = vec!(27, 41, 4, 0, 36, 3, 4, 26, 27, 0, 14, 2, 11, 37, 40, 35, 21, 30, 6, 31, 27, 6, 18, 27, 0, 13, 13, 9, 19, 7, 24, 25, 12, 10, 32, 17, 33, 26, 38, 4, 38, 2, 27, 41, 34, 40, 40, 23, 1, 17, 16, 40, 38, 24, 26, 33, 37, 34, 26, 41, 3, 6, 19, 16, 34, 6, 32, 29, 25, 14, 28, 23, 6, 8, 22, 9, 0, 27, 13, 7, 8, 34, 25, 1, 16, 3, 18, 35, 16, 20, 16, 0, 8, 5, 8, 32, 19, 35, 4, 3, 6, 10, 11, 12, 20, 21, 22, 28, 29, 30, 31, 36, 5, 42);
    assert_eq!(find_lonely(test_two), 42);
}

#[test]
fn test_find_lonely_massive_first() {

    let test_two = vec!(42, 27, 41, 4, 0, 36, 3, 4, 26, 27, 0, 14, 2, 11, 37, 40, 35, 21, 30, 6, 31, 27, 6, 18, 27, 0, 13, 13, 9, 19, 7, 24, 25, 12, 10, 32, 17, 33, 26, 38, 4, 38, 2, 27, 41, 34, 40, 40, 23, 1, 17, 16, 40, 38, 24, 26, 33, 37, 34, 26, 41, 3, 6, 19, 16, 34, 6, 32, 29, 25, 14, 28, 23, 6, 8, 22, 9, 0, 27, 13, 7, 8, 34, 25, 1, 16, 3, 18, 35, 16, 20, 16, 0, 8, 5, 8, 32, 19, 35, 4, 3, 6, 10, 11, 12, 20, 21, 22, 28, 29, 30, 31, 36, 5);
    assert_eq!(find_lonely(test_two), 42);
}
